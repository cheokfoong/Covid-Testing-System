package com.mycompany.pages;

// Import(s)
import com.mycompany.api.*;
import com.mycompany.covidsystem.ControlPanel;
import com.mycompany.entity.TestingSite;
import java.util.*;
import javax.swing.*;
import java.awt.event.*;
import java.time.*;

/**
 * This class represents the search testing site page
 */
public class SearchTestingSitePage extends javax.swing.JPanel {

    // Manually included variable(s)
    private List<TestingSite> testingSites = new ArrayList<>();
    private List<TestingSite> filteredTestingSites = new ArrayList<>();
    private DefaultListModel<String> listModel = new DefaultListModel<>();
    private TestingSite selectedTestingSite;
    private static final ControlPanel controlPanel = ControlPanel.getControlPanel();
    private static final APIFactory<TestingSite> testingSiteFactory = FactoryCreator.getTestingSiteFactory();
    public static final String NOT_AVAILABLE = "N/A";
    public static final int DOUBLE_CLICK = 2;

    /**
     * Creates new form SearchTestingSitePage
     */
    public SearchTestingSitePage() {
        initComponents();
    
        // Obtain list of testing sites from web service
        try
        {
            Get<TestingSite> testingSiteGet = testingSiteFactory.createGet();
            testingSites = testingSiteGet.createGetRequest();
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchPanel = new javax.swing.JPanel();
        suburbNameLabel = new javax.swing.JLabel();
        suburbNameTextField = new javax.swing.JTextField();
        facilityTypeLabel = new javax.swing.JLabel();
        facilityTypeComboBox = new javax.swing.JComboBox<>();
        searchButton = new javax.swing.JButton();
        searchPanelLabel = new javax.swing.JLabel();
        resultsPanel = new javax.swing.JPanel();
        resultsPanelLabel = new javax.swing.JLabel();
        resultsScrollPane = new javax.swing.JScrollPane();
        resultsList = new javax.swing.JList<>();
        detailsPanel = new javax.swing.JPanel();
        detailsPanelLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        websiteUrlLabel = new javax.swing.JLabel();
        websiteUrlTextField = new javax.swing.JTextField();
        phoneNumberLabel = new javax.swing.JLabel();
        phoneNumberTextField = new javax.swing.JTextField();
        descriptionLabel = new javax.swing.JLabel();
        descriptionTextField = new javax.swing.JTextField();
        latitudeLabel = new javax.swing.JLabel();
        latitudeTextField = new javax.swing.JTextField();
        longitudeLabel = new javax.swing.JLabel();
        longitudeTextField = new javax.swing.JTextField();
        unitNumberLabel = new javax.swing.JLabel();
        unitNumberTextField = new javax.swing.JTextField();
        suburbLabel = new javax.swing.JLabel();
        suburbTextField = new javax.swing.JTextField();
        stateLabel = new javax.swing.JLabel();
        stateTextField = new javax.swing.JTextField();
        postcodeLabel = new javax.swing.JLabel();
        postcodeTextField = new javax.swing.JTextField();
        streetLabel = new javax.swing.JLabel();
        streetTextField = new javax.swing.JTextField();
        idLabel = new javax.swing.JLabel();
        idTextField = new javax.swing.JTextField();
        street2Label = new javax.swing.JLabel();
        street2TextField = new javax.swing.JTextField();
        openingTimeLabel = new javax.swing.JLabel();
        openingTimeTextField = new javax.swing.JTextField();
        onSiteBookingLabel = new javax.swing.JLabel();
        onSiteBookingTextField = new javax.swing.JTextField();
        onSiteTestingLabel = new javax.swing.JLabel();
        onSiteTestingTextField = new javax.swing.JTextField();
        closingTimeLabel = new javax.swing.JLabel();
        closingTimeTextField = new javax.swing.JTextField();
        openOrClosedLabel = new javax.swing.JLabel();
        openOrClosedTextField = new javax.swing.JTextField();
        onSiteTestingButton = new javax.swing.JButton();
        homeTestingButton = new javax.swing.JButton();

        searchPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        suburbNameLabel.setText("Suburb Name:");

        facilityTypeLabel.setText("Facility Type:");

        facilityTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N/A", "Drive-through", "Walk-in", "Clinic", "GP", "Hospital" }));

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        searchPanelLabel.setText("Search");

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchPanelLabel)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(suburbNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(suburbNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(facilityTypeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(facilityTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchPanelLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(suburbNameLabel)
                    .addComponent(suburbNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(facilityTypeLabel)
                    .addComponent(facilityTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        resultsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        resultsPanel.setPreferredSize(new java.awt.Dimension(200, 166));

        resultsPanelLabel.setText("Results");

        resultsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultsListMouseClicked(evt);
            }
        });
        resultsScrollPane.setViewportView(resultsList);

        javax.swing.GroupLayout resultsPanelLayout = new javax.swing.GroupLayout(resultsPanel);
        resultsPanel.setLayout(resultsPanelLayout);
        resultsPanelLayout.setHorizontalGroup(
            resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(resultsPanelLayout.createSequentialGroup()
                        .addComponent(resultsPanelLabel)
                        .addGap(0, 149, Short.MAX_VALUE)))
                .addContainerGap())
        );
        resultsPanelLayout.setVerticalGroup(
            resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultsPanelLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultsScrollPane)
                .addContainerGap())
        );

        detailsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        detailsPanel.setPreferredSize(new java.awt.Dimension(590, 512));

        detailsPanelLabel.setText("Details");

        nameLabel.setText("Name:");

        nameTextField.setEditable(false);
        nameTextField.setColumns(37);

        websiteUrlLabel.setText("Website URL:");

        websiteUrlTextField.setEditable(false);
        websiteUrlTextField.setColumns(37);

        phoneNumberLabel.setText("Phone Number:");

        phoneNumberTextField.setEditable(false);
        phoneNumberTextField.setColumns(37);

        descriptionLabel.setText("Description:");

        descriptionTextField.setEditable(false);
        descriptionTextField.setColumns(37);

        latitudeLabel.setText("Latitude:");

        latitudeTextField.setEditable(false);
        latitudeTextField.setColumns(8);

        longitudeLabel.setText("Longitude:");

        longitudeTextField.setEditable(false);
        longitudeTextField.setColumns(8);

        unitNumberLabel.setText("Unit Number:");

        unitNumberTextField.setEditable(false);
        unitNumberTextField.setColumns(8);

        suburbLabel.setText("Suburb:");

        suburbTextField.setEditable(false);
        suburbTextField.setColumns(8);

        stateLabel.setText("State:");

        stateTextField.setEditable(false);
        stateTextField.setColumns(8);

        postcodeLabel.setText("Postcode:");

        postcodeTextField.setEditable(false);
        postcodeTextField.setColumns(8);

        streetLabel.setText("Street:");

        streetTextField.setEditable(false);
        streetTextField.setColumns(37);

        idLabel.setText("ID:");

        idTextField.setEditable(false);
        idTextField.setColumns(37);

        street2Label.setText("Street 2:");

        street2TextField.setEditable(false);
        street2TextField.setColumns(37);

        openingTimeLabel.setText("Opening Time:");

        openingTimeTextField.setEditable(false);
        openingTimeTextField.setColumns(8);

        onSiteBookingLabel.setText("On-site Booking:");

        onSiteBookingTextField.setEditable(false);
        onSiteBookingTextField.setColumns(8);

        onSiteTestingLabel.setText("On-site Testing:");

        onSiteTestingTextField.setEditable(false);
        onSiteTestingTextField.setColumns(8);

        closingTimeLabel.setText("Closing Time:");

        closingTimeTextField.setEditable(false);
        closingTimeTextField.setColumns(8);

        openOrClosedLabel.setText("Open Or Closed:");

        openOrClosedTextField.setEditable(false);
        openOrClosedTextField.setColumns(8);

        onSiteTestingButton.setText("Book For On-site Testing");
        onSiteTestingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSiteTestingButtonActionPerformed(evt);
            }
        });

        homeTestingButton.setText("Book For Home Testing");
        homeTestingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeTestingButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout detailsPanelLayout = new javax.swing.GroupLayout(detailsPanel);
        detailsPanel.setLayout(detailsPanelLayout);
        detailsPanelLayout.setHorizontalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(detailsPanelLabel)
                    .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(detailsPanelLayout.createSequentialGroup()
                            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(detailsPanelLayout.createSequentialGroup()
                                    .addComponent(nameLabel)
                                    .addGap(106, 106, 106))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, detailsPanelLayout.createSequentialGroup()
                                    .addComponent(idLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(nameTextField)
                                .addComponent(idTextField)))
                        .addGroup(detailsPanelLayout.createSequentialGroup()
                            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(websiteUrlLabel)
                                .addComponent(phoneNumberLabel)
                                .addComponent(descriptionLabel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(websiteUrlTextField)
                                .addComponent(phoneNumberTextField)
                                .addComponent(streetTextField)
                                .addComponent(street2TextField)
                                .addComponent(descriptionTextField, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGroup(detailsPanelLayout.createSequentialGroup()
                            .addGap(140, 140, 140)
                            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(openOrClosedTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(unitNumberTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(stateTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(latitudeTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(openingTimeTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(onSiteBookingTextField, javax.swing.GroupLayout.Alignment.LEADING))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(detailsPanelLayout.createSequentialGroup()
                                    .addComponent(onSiteTestingLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                                    .addComponent(onSiteTestingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(detailsPanelLayout.createSequentialGroup()
                                    .addComponent(postcodeLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(postcodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(detailsPanelLayout.createSequentialGroup()
                                    .addComponent(suburbLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(suburbTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(detailsPanelLayout.createSequentialGroup()
                                    .addComponent(longitudeLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(longitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(detailsPanelLayout.createSequentialGroup()
                                    .addComponent(closingTimeLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(closingTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(detailsPanelLayout.createSequentialGroup()
                            .addComponent(onSiteTestingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(homeTestingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(onSiteBookingLabel)
                    .addComponent(openOrClosedLabel)
                    .addComponent(latitudeLabel)
                    .addComponent(unitNumberLabel)
                    .addComponent(stateLabel)
                    .addComponent(streetLabel)
                    .addComponent(street2Label)
                    .addComponent(openingTimeLabel))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        detailsPanelLayout.setVerticalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(detailsPanelLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(websiteUrlLabel)
                    .addComponent(websiteUrlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneNumberLabel)
                    .addComponent(phoneNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descriptionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(latitudeLabel)
                    .addComponent(latitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(longitudeLabel)
                    .addComponent(longitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unitNumberLabel)
                    .addComponent(unitNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(suburbLabel)
                    .addComponent(suburbTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateLabel)
                    .addComponent(stateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(postcodeLabel)
                    .addComponent(postcodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(streetLabel)
                    .addComponent(streetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(street2Label)
                    .addComponent(street2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(onSiteBookingLabel)
                    .addComponent(onSiteBookingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(onSiteTestingLabel)
                    .addComponent(onSiteTestingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(openingTimeLabel)
                    .addComponent(openingTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closingTimeLabel)
                    .addComponent(closingTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(openOrClosedLabel)
                    .addComponent(openOrClosedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homeTestingButton)
                    .addComponent(onSiteTestingButton))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(resultsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(detailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                    .addComponent(detailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // This method is used to check if the testing site is open or closed
    // It obtains the current time of the user
    // Then it compares with the opening and closing time of the testing site
    // If the current time of the user is in between the opening and closing time, then its open
    // Else its closed
    private String checkOpenOrClosed(String openingTime, String closingTime)
    {
        // Obtain the opening and closing hours
        int openingHour = Integer.parseInt(openingTime.substring(0, 2));
        int closingHour = Integer.parseInt(closingTime.substring(0, 2));
        
        // If the user's current hour is in between the opening and closing hour
        // Then the testing site is displayed as open
        // Else it is displayed as closed
        LocalDateTime currentTime = LocalDateTime.now();
        int currentHour = currentTime.getHour();
        if ((currentHour >= openingHour) && (currentHour < closingHour))
        {
            return "Open";
        }
        else
        {
            return "Closed";
        }
    }
    
    // This method is used to clear the displayed details of a testing site
    private void clearDetails()
    {
        idTextField.setText("");
        nameTextField.setText("");
        websiteUrlTextField.setText("");
        phoneNumberTextField.setText("");
        descriptionTextField.setText("");
        latitudeTextField.setText("");
        longitudeTextField.setText("");
        unitNumberTextField.setText("");
        suburbTextField.setText("");
        stateTextField.setText("");
        postcodeTextField.setText("");
        streetTextField.setText("");
        street2TextField.setText("");
        onSiteBookingTextField.setText("");
        onSiteTestingTextField.setText("");
        openingTimeTextField.setText("");
        closingTimeTextField.setText("");
        openOrClosedTextField.setText("");     
    }

    // This method is used to set and display the details of a testing site
    // Some details are optional
    // If they are null, set and display as N/A (not available)
    private void setDetails(TestingSite testingSite)
    {
        idTextField.setText(testingSite.getId());
        nameTextField.setText(testingSite.getName());

        String websiteUrl = testingSite.getWebsiteUrl();
        websiteUrlTextField.setText((websiteUrl == null) ? (NOT_AVAILABLE) : (websiteUrl));
        
        String phoneNumber = testingSite.getPhoneNumber();
        phoneNumberTextField.setText((phoneNumber == null) ? (NOT_AVAILABLE) : (phoneNumber));

        String description = testingSite.getDescription();
        descriptionTextField.setText((description == null) ? (NOT_AVAILABLE) : (description));

        latitudeTextField.setText(String.valueOf(testingSite.getAddress().getLatitude()));
        longitudeTextField.setText(String.valueOf(testingSite.getAddress().getLongitude()));

        String unitNumber = testingSite.getAddress().getUnitNumber();
        unitNumberTextField.setText((unitNumber == null) ? (NOT_AVAILABLE) : (unitNumber));

        suburbTextField.setText(testingSite.getAddress().getSuburb());
        stateTextField.setText(testingSite.getAddress().getState());
        postcodeTextField.setText(testingSite.getAddress().getPostcode());
        streetTextField.setText(testingSite.getAddress().getStreet());

        String street2 = testingSite.getAddress().getStreet2();
        street2TextField.setText((street2 == null) ? (NOT_AVAILABLE) : (street2));

        onSiteBookingTextField.setText(testingSite.getAdditionalInfo().yesOrNo(testingSite.getAdditionalInfo().getOnSiteBooking()));
        onSiteTestingTextField.setText(testingSite.getAdditionalInfo().yesOrNo(testingSite.getAdditionalInfo().getOnSiteTesting()));
        openingTimeTextField.setText(testingSite.getAdditionalInfo().getOpeningTime());
        closingTimeTextField.setText(testingSite.getAdditionalInfo().getClosingTime());
        openOrClosedTextField.setText(checkOpenOrClosed(testingSite.getAdditionalInfo().getOpeningTime(), testingSite.getAdditionalInfo().getClosingTime()));
    }

    // This method is used to search for testing sites
    // It performs logical checking conditions
    // There are 3 ways to search for a testing site
    // Suburb name, facility type and both
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String suburbName = suburbNameTextField.getText();
        String facilityType = String.valueOf(facilityTypeComboBox.getSelectedItem());

        // Reset filteredTestingSites, listModel, displayed details of a testing site at every search
        filteredTestingSites.clear();
        listModel.removeAllElements();
        resultsList.setModel(listModel);
        clearDetails();

        // Search using only suburb name
        if ((suburbName.isEmpty() == false) && (facilityType.equals(NOT_AVAILABLE)))
        {
            for (TestingSite testingSite: testingSites) 
            {
                if (testingSite.getAddress().getSuburb().equalsIgnoreCase(suburbName))
                {
                    filteredTestingSites.add(testingSite);
                }
            }
        }
        // Search using only facility type
        else if ((suburbName.isEmpty() == true) && (!facilityType.equals(NOT_AVAILABLE)))
        {
            for (TestingSite testingSite: testingSites) 
            {
                if (testingSite.getAdditionalInfo().getfacilityType().equals(facilityType))
                {
                    filteredTestingSites.add(testingSite);
                }
            }
        }
        // Extra feature implemented: search using both suburb name and facility type
        else if ((suburbName.isEmpty() == false) && (!facilityType.equals(NOT_AVAILABLE)))
        {
            for (TestingSite testingSite: testingSites) 
            {
                if ((testingSite.getAddress().getSuburb().equalsIgnoreCase(suburbName)) && (testingSite.getAdditionalInfo().getfacilityType().equals(facilityType)))
                {
                    filteredTestingSites.add(testingSite);
                }
            }
        }

        // Display search results
        if (filteredTestingSites.isEmpty() != true)
        {
            for (TestingSite testingSite: filteredTestingSites)
            {
                listModel.addElement(testingSite.getName());
            }
            resultsList.setModel(listModel);
        }
        else
        {
            listModel.addElement("No testing sites found");
            resultsList.setModel(listModel);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    // This method is used to display the details of a testing site
    // Whenever its name in the list of results is double clicked
    private void resultsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultsListMouseClicked
        if ((evt.getClickCount() == DOUBLE_CLICK) && (evt.getButton() == MouseEvent.BUTTON1))
        {
            for (TestingSite testingSite: filteredTestingSites)
            {
                // Name of testing site is used for checking
                // It is logically assumed that a testing site's name is unique
                // So, there will not be a case where two testing sites on the list have the same name
                if (String.valueOf(testingSite.getName()).equals(resultsList.getSelectedValue()))
                {
                    setDetails(testingSite);
                    selectedTestingSite = testingSite;
                }
            }
        }
    }//GEN-LAST:event_resultsListMouseClicked

    // This method is used to direct the user to the online booking page
    private void onSiteTestingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onSiteTestingButtonActionPerformed
        controlPanel.showOnlineBookingPage(selectedTestingSite);
    }//GEN-LAST:event_onSiteTestingButtonActionPerformed

    // This method is used to direct the user to the home booking page
    private void homeTestingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeTestingButtonActionPerformed
        controlPanel.showHomeBookingPage(selectedTestingSite);
    }//GEN-LAST:event_homeTestingButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel closingTimeLabel;
    private javax.swing.JTextField closingTimeTextField;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JLabel detailsPanelLabel;
    private javax.swing.JComboBox<String> facilityTypeComboBox;
    private javax.swing.JLabel facilityTypeLabel;
    private javax.swing.JButton homeTestingButton;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idTextField;
    private javax.swing.JLabel latitudeLabel;
    private javax.swing.JTextField latitudeTextField;
    private javax.swing.JLabel longitudeLabel;
    private javax.swing.JTextField longitudeTextField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel onSiteBookingLabel;
    private javax.swing.JTextField onSiteBookingTextField;
    private javax.swing.JButton onSiteTestingButton;
    private javax.swing.JLabel onSiteTestingLabel;
    private javax.swing.JTextField onSiteTestingTextField;
    private javax.swing.JLabel openOrClosedLabel;
    private javax.swing.JTextField openOrClosedTextField;
    private javax.swing.JLabel openingTimeLabel;
    private javax.swing.JTextField openingTimeTextField;
    private javax.swing.JLabel phoneNumberLabel;
    private javax.swing.JTextField phoneNumberTextField;
    private javax.swing.JLabel postcodeLabel;
    private javax.swing.JTextField postcodeTextField;
    private javax.swing.JList<String> resultsList;
    private javax.swing.JPanel resultsPanel;
    private javax.swing.JLabel resultsPanelLabel;
    private javax.swing.JScrollPane resultsScrollPane;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JLabel searchPanelLabel;
    private javax.swing.JLabel stateLabel;
    private javax.swing.JTextField stateTextField;
    private javax.swing.JLabel street2Label;
    private javax.swing.JTextField street2TextField;
    private javax.swing.JLabel streetLabel;
    private javax.swing.JTextField streetTextField;
    private javax.swing.JLabel suburbLabel;
    private javax.swing.JLabel suburbNameLabel;
    private javax.swing.JTextField suburbNameTextField;
    private javax.swing.JTextField suburbTextField;
    private javax.swing.JLabel unitNumberLabel;
    private javax.swing.JTextField unitNumberTextField;
    private javax.swing.JLabel websiteUrlLabel;
    private javax.swing.JTextField websiteUrlTextField;
    // End of variables declaration//GEN-END:variables
}
