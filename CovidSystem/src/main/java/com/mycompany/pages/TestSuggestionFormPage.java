package com.mycompany.pages;

// Imports(s)
import com.mycompany.api.*;
import com.mycompany.covidsystem.ControlPanel;
import com.mycompany.entity.Booking;
import com.mycompany.entity.CovidTest;
import java.util.*;
import javax.swing.*;
import java.awt.event.*;

/**
 * This class represents test suggestion form page
 */
public class TestSuggestionFormPage extends javax.swing.JPanel {

    // Manually included variable(s)
    private List<JCheckBox> checkboxes = new ArrayList<>();
    private int checkboxCounter = 0;
    private static final ControlPanel controlPanel = ControlPanel.getControlPanel();
    private static final APIFactory<Booking> bookingFactory = FactoryCreator.getBookingFactory();
    private static final APIFactory<CovidTest> covidTestFactory = FactoryCreator.getCovidTestFactory();

    // Constants
    public static final int SYMPTOM_THRESHOLD = 3;
    public static final String PCR = "PCR";
    public static final String RAT = "RAT";
    public static final String SUGGESTED_TEST_TEXT = "Suggested test will be shown here";

    /**
     * Creates new form TestSuggestionFormPage
     */
    public TestSuggestionFormPage() {
        initComponents();

        // Store the symptom checkboxes in a list
        checkboxes.add(chestPainPressureCheckBox);
        checkboxes.add(diarrheaCheckBox);
        checkboxes.add(dryCoughCheckBox);
        checkboxes.add(fatigueCheckBox);
        checkboxes.add(feverCheckBox);
        checkboxes.add(lossTasteSmellCheckBox);
        checkboxes.add(muscleBodyAchesCheckBox);
        checkboxes.add(nauseaVomitingCheckBox);
        checkboxes.add(shortnessOfBreathCheckBox);
        checkboxes.add(soreThroatCheckBox);
        
        // Add actions to checkboxes
        addActionToCheckboxes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        testSuggestionChecklistPanel = new javax.swing.JPanel();
        testSuggestionChecklistPanelLabel = new javax.swing.JLabel();
        soreThroatCheckBox = new javax.swing.JCheckBox();
        dryCoughCheckBox = new javax.swing.JCheckBox();
        feverCheckBox = new javax.swing.JCheckBox();
        lossTasteSmellCheckBox = new javax.swing.JCheckBox();
        nauseaVomitingCheckBox = new javax.swing.JCheckBox();
        shortnessOfBreathCheckBox = new javax.swing.JCheckBox();
        muscleBodyAchesCheckBox = new javax.swing.JCheckBox();
        diarrheaCheckBox = new javax.swing.JCheckBox();
        fatigueCheckBox = new javax.swing.JCheckBox();
        chestPainPressureCheckBox = new javax.swing.JCheckBox();
        noSymptomsCheckBox = new javax.swing.JCheckBox();
        closeContactCheckBox = new javax.swing.JCheckBox();
        testSuggestionResultPanel = new javax.swing.JPanel();
        testSuggestionResultPanelLabel = new javax.swing.JLabel();
        suggestedTestTextField = new javax.swing.JTextField();
        patientIdLabel = new javax.swing.JLabel();
        patientIdTextField = new javax.swing.JTextField();
        bookingIdLabel = new javax.swing.JLabel();
        bookingIdTextField = new javax.swing.JTextField();
        logoutButton = new javax.swing.JButton();
        getSuggestionButton = new javax.swing.JButton();
        confirmTestSuggestionButton = new javax.swing.JButton();
        resetChecklistAndResultButton = new javax.swing.JButton();

        testSuggestionChecklistPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        testSuggestionChecklistPanelLabel.setText("Test Suggestion Checklist");

        soreThroatCheckBox.setText("Sore throat");

        dryCoughCheckBox.setText("Dry cough");

        feverCheckBox.setText("Fever");

        lossTasteSmellCheckBox.setText("Loss of taste and / or smell");

        nauseaVomitingCheckBox.setText("Nausea / vomiting");

        shortnessOfBreathCheckBox.setText("Shortness of breath / have difficulty breathing");

        muscleBodyAchesCheckBox.setText("Muscle / body aches");

        diarrheaCheckBox.setText("Diarrhea");

        fatigueCheckBox.setText("Fatigue");

        chestPainPressureCheckBox.setText("Persistent pain / pressure in the chest");

        noSymptomsCheckBox.setText("None of the symptoms above / asymptomatic");
        noSymptomsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noSymptomsCheckBoxActionPerformed(evt);
            }
        });

        closeContactCheckBox.setText("Close contact with someone that has COVID-19 ");

        javax.swing.GroupLayout testSuggestionChecklistPanelLayout = new javax.swing.GroupLayout(testSuggestionChecklistPanel);
        testSuggestionChecklistPanel.setLayout(testSuggestionChecklistPanelLayout);
        testSuggestionChecklistPanelLayout.setHorizontalGroup(
            testSuggestionChecklistPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testSuggestionChecklistPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(testSuggestionChecklistPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(testSuggestionChecklistPanelLabel)
                    .addComponent(soreThroatCheckBox)
                    .addComponent(dryCoughCheckBox)
                    .addComponent(feverCheckBox)
                    .addComponent(lossTasteSmellCheckBox)
                    .addComponent(nauseaVomitingCheckBox)
                    .addComponent(shortnessOfBreathCheckBox)
                    .addComponent(muscleBodyAchesCheckBox)
                    .addComponent(diarrheaCheckBox)
                    .addComponent(fatigueCheckBox)
                    .addComponent(chestPainPressureCheckBox)
                    .addComponent(noSymptomsCheckBox)
                    .addComponent(closeContactCheckBox))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        testSuggestionChecklistPanelLayout.setVerticalGroup(
            testSuggestionChecklistPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testSuggestionChecklistPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(testSuggestionChecklistPanelLabel)
                .addGap(18, 18, 18)
                .addComponent(soreThroatCheckBox)
                .addGap(18, 18, 18)
                .addComponent(dryCoughCheckBox)
                .addGap(18, 18, 18)
                .addComponent(feverCheckBox)
                .addGap(18, 18, 18)
                .addComponent(lossTasteSmellCheckBox)
                .addGap(18, 18, 18)
                .addComponent(nauseaVomitingCheckBox)
                .addGap(18, 18, 18)
                .addComponent(shortnessOfBreathCheckBox)
                .addGap(18, 18, 18)
                .addComponent(muscleBodyAchesCheckBox)
                .addGap(18, 18, 18)
                .addComponent(diarrheaCheckBox)
                .addGap(18, 18, 18)
                .addComponent(fatigueCheckBox)
                .addGap(18, 18, 18)
                .addComponent(chestPainPressureCheckBox)
                .addGap(18, 18, 18)
                .addComponent(noSymptomsCheckBox)
                .addGap(18, 18, 18)
                .addComponent(closeContactCheckBox)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        testSuggestionResultPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        testSuggestionResultPanelLabel.setText("Test Suggestion Result:");

        suggestedTestTextField.setEditable(false);
        suggestedTestTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        suggestedTestTextField.setText("Suggested test will be shown here");

        patientIdLabel.setText("Patient ID:");

        bookingIdLabel.setText("Booking ID:");

        logoutButton.setText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout testSuggestionResultPanelLayout = new javax.swing.GroupLayout(testSuggestionResultPanel);
        testSuggestionResultPanel.setLayout(testSuggestionResultPanelLayout);
        testSuggestionResultPanelLayout.setHorizontalGroup(
            testSuggestionResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testSuggestionResultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(testSuggestionResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(suggestedTestTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                    .addComponent(patientIdTextField)
                    .addGroup(testSuggestionResultPanelLayout.createSequentialGroup()
                        .addGroup(testSuggestionResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(testSuggestionResultPanelLabel)
                            .addComponent(patientIdLabel)
                            .addComponent(bookingIdLabel))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(bookingIdTextField)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, testSuggestionResultPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        testSuggestionResultPanelLayout.setVerticalGroup(
            testSuggestionResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testSuggestionResultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoutButton)
                .addGap(117, 117, 117)
                .addComponent(testSuggestionResultPanelLabel)
                .addGap(18, 18, 18)
                .addComponent(suggestedTestTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(patientIdLabel)
                .addGap(18, 18, 18)
                .addComponent(patientIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bookingIdLabel)
                .addGap(18, 18, 18)
                .addComponent(bookingIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(149, Short.MAX_VALUE))
        );

        getSuggestionButton.setText("Get Suggestion");
        getSuggestionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getSuggestionButtonActionPerformed(evt);
            }
        });

        confirmTestSuggestionButton.setText("Confirm Test Suggestion");
        confirmTestSuggestionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmTestSuggestionButtonActionPerformed(evt);
            }
        });

        resetChecklistAndResultButton.setText("Reset Checklist And Result");
        resetChecklistAndResultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetChecklistAndResultButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(testSuggestionChecklistPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(testSuggestionResultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resetChecklistAndResultButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(getSuggestionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(confirmTestSuggestionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(testSuggestionChecklistPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(testSuggestionResultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getSuggestionButton)
                    .addComponent(confirmTestSuggestionButton)
                    .addComponent(resetChecklistAndResultButton))
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // This method adds action to checkboxes
    // See disableCheckboxes method for more information
    private void addActionToCheckboxes()
    {
        for (JCheckBox checkbox: checkboxes)
        {
            checkbox.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    disableCheckboxes(checkbox);
                }
            });
        }
    }
    
    // This method is for symptom checkboxes
    // As long as one symptom checkbox is selected, the no symptom checkbox is disabled
    // Having symptoms and having no symptoms are mutually exclusive conditions
    // Selecting at least one symptom checkbox and selecting the no symptom checkbox is illogical
    private void disableCheckboxes(JCheckBox checkbox)
    {
        if (checkbox.isSelected() == true)
        {
            noSymptomsCheckBox.setEnabled(false);
            checkboxCounter++;
        }
        else
        {
            checkboxCounter--;
            if (checkboxCounter == 0)
            {
                noSymptomsCheckBox.setEnabled(true);
            }
        }
    }
    
    // This method resets checkboxes and text fields to its original state
    private void resetChecklistAndResult()
    {
        checkboxCounter = 0;
        for (JCheckBox checkbox: checkboxes)
        {
            checkbox.setSelected(false);
            checkbox.setEnabled(true);
        }
        noSymptomsCheckBox.setSelected(false);
        noSymptomsCheckBox.setEnabled(true);
        closeContactCheckBox.setSelected(false);
        suggestedTestTextField.setText(SUGGESTED_TEST_TEXT);
    }
    
    // This method performs logical checking conditions to suggest a type of test
    // It is called when a button is clicked
    private void getSuggestionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getSuggestionButtonActionPerformed
        
        // Two types of symptoms
        // Severe or non-severe
        // If there are 3 or more symptoms selected, severe
        // Else, non-severe

        // Obtain number of symptoms selected
        int symptomCount = 0;
        for (JCheckBox checkBox: checkboxes)
        {
            if (checkBox.isSelected() == true)
            {
                symptomCount++;
            }
        }
        
        // If no checkbox is selected, do nothing
        if ((symptomCount == 0) && (noSymptomsCheckBox.isSelected() == false) && (closeContactCheckBox.isSelected() == false))
        {
            suggestedTestTextField.setText(SUGGESTED_TEST_TEXT);
            symptomCount = 0;
        }
        // If there are 3 or more symptoms selected
        // Severe
        else if (symptomCount >= SYMPTOM_THRESHOLD)
        {
            suggestedTestTextField.setText(PCR);
            symptomCount = 0;
        }
        // If there are at least 1 and less than 3 symptoms selected
        // Non-severe
        else if ((symptomCount > 0) && (symptomCount < SYMPTOM_THRESHOLD))
        {
            suggestedTestTextField.setText(RAT);
            symptomCount = 0;
        } 
        // If there are 0 symptoms selected
        // And if the no symptom checkbox is selected
        // And there is or is no close contact
        // Non-severe
        else if ((symptomCount == 0) && (noSymptomsCheckBox.isSelected() == true))
        {
            suggestedTestTextField.setText(RAT);
            symptomCount = 0;
        }  
        // If none of the symptom checkboxes are selected
        // And if the no symptom checkbox is not selected
        // But the close contact checkbox is selected
        // Non-severe
        else if ((symptomCount == 0) && (noSymptomsCheckBox.isSelected() == false) && (closeContactCheckBox.isSelected() == true))
        {
            suggestedTestTextField.setText(RAT);
            symptomCount = 0;
        }
    }//GEN-LAST:event_getSuggestionButtonActionPerformed

    // This method creates a CovidTest object and stores data
    // It is called when a button is clicked
    private void confirmTestSuggestionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmTestSuggestionButtonActionPerformed
        
        // It is logically assumed that the patient knows its user ID and booking ID
        String suggestedTest = suggestedTestTextField.getText();
        String patientId = patientIdTextField.getText();
        String bookingId = bookingIdTextField.getText();
        
        List<Booking> bookings = new ArrayList<>();

        // Create the CovidTest object and send it to the web service
        // Update Booking status 
        // Notify that the required details are sent
        try
        {
            Post covidTestPost = covidTestFactory.createPost();
            covidTestPost.createPostRequest(suggestedTest, patientId, bookingId);
            Get<Booking> bookingGet = bookingFactory.createGet();
            bookings = bookingGet.createGetRequest();

            for (Booking booking: bookings)
            {
                if (booking.getId().equals(bookingId))
                {
                    Patch bookingPatch = bookingFactory.createPatch();
                    bookingPatch.createPatchRequest("PROCESSED", booking.getId());
                }
            }
            
            resetChecklistAndResult();
            patientIdTextField.setText("");
            bookingIdTextField.setText("");
            JOptionPane.showMessageDialog(null, "Test suggestion has been submitted.", "Test Suggestion", JOptionPane.INFORMATION_MESSAGE);
        }
        catch (Exception e)
        {
            resetChecklistAndResult();
            patientIdTextField.setText("");
            bookingIdTextField.setText("");
            JOptionPane.showMessageDialog(null, e.getMessage(), "Test Suggestion", JOptionPane.ERROR_MESSAGE);
        }   
    }//GEN-LAST:event_confirmTestSuggestionButtonActionPerformed

    // This method calls the resetChecklistAndResult method
    // It is called when a button is clicked
    private void resetChecklistAndResultButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetChecklistAndResultButtonActionPerformed
        
        // Resets checkboxCounter, state of all checkboxes, test suggestion result
        resetChecklistAndResult();
    }//GEN-LAST:event_resetChecklistAndResultButtonActionPerformed

    // This method is for the no symptom checkbox
    // As long as the no symptom checkbox is selected, all symptom checkboxs are disabled
    // Having symptoms and having no symptoms are mutually exclusive conditions
    // Selecting at least one symptom checkbox and selecting the no symptom checkbox is illogical
    private void noSymptomsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noSymptomsCheckBoxActionPerformed
        if (noSymptomsCheckBox.isSelected() == true)
        {
            for (JCheckBox checkbox: checkboxes)
            {
                checkbox.setEnabled(false);
            }
        }
        else
        {
            for (JCheckBox checkbox: checkboxes)
            {
                checkbox.setEnabled(true);
            }
        }
    }//GEN-LAST:event_noSymptomsCheckBoxActionPerformed

    // This method is used to bring a user back to the login page
    // It is called when a button is clicked
    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        controlPanel.logOut();
    }//GEN-LAST:event_logoutButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bookingIdLabel;
    private javax.swing.JTextField bookingIdTextField;
    private javax.swing.JCheckBox chestPainPressureCheckBox;
    private javax.swing.JCheckBox closeContactCheckBox;
    private javax.swing.JButton confirmTestSuggestionButton;
    private javax.swing.JCheckBox diarrheaCheckBox;
    private javax.swing.JCheckBox dryCoughCheckBox;
    private javax.swing.JCheckBox fatigueCheckBox;
    private javax.swing.JCheckBox feverCheckBox;
    private javax.swing.JButton getSuggestionButton;
    private javax.swing.JButton logoutButton;
    private javax.swing.JCheckBox lossTasteSmellCheckBox;
    private javax.swing.JCheckBox muscleBodyAchesCheckBox;
    private javax.swing.JCheckBox nauseaVomitingCheckBox;
    private javax.swing.JCheckBox noSymptomsCheckBox;
    private javax.swing.JLabel patientIdLabel;
    private javax.swing.JTextField patientIdTextField;
    private javax.swing.JButton resetChecklistAndResultButton;
    private javax.swing.JCheckBox shortnessOfBreathCheckBox;
    private javax.swing.JCheckBox soreThroatCheckBox;
    private javax.swing.JTextField suggestedTestTextField;
    private javax.swing.JPanel testSuggestionChecklistPanel;
    private javax.swing.JLabel testSuggestionChecklistPanelLabel;
    private javax.swing.JPanel testSuggestionResultPanel;
    private javax.swing.JLabel testSuggestionResultPanelLabel;
    // End of variables declaration//GEN-END:variables
}
